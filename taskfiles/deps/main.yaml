version: "3"

includes:
  utils: "./utils.yaml"
  yscope-dev-utils: "../../tools/yscope-dev-utils/exports/taskfiles/utils/utils.yaml"

vars:
  # Directories
  G_DEPS_DIR: "{{.G_BUILD_DIR}}/deps"
  G_DEPS_CPP_DIR: "{{.G_DEPS_DIR}}/cpp-deps"
  G_DEPS_CPP_CHECKSUMS_DIR: "{{.G_DEPS_CPP_DIR}}/checksums"

  # Checksum file paths
  G_DEPS_CPP_CHECKSUM_FILE: "{{.G_DEPS_CPP_CHECKSUMS_DIR}}/all.md5"
  G_DEPS_LOG_VIEWER_CHECKSUM_FILE: "{{.G_DEPS_DIR}}/log-viewer.md5"

  # NOTE: This must be kept in-sync with its usage in components/core/CMakeLists.txt
  G_DEPS_CPP_CMAKE_SETTINGS_DIR: "{{.G_DEPS_CPP_DIR}}/cmake-settings"

  # Library names
  G_FMT_LIB_NAME: "fmt"

tasks:
  default:
    deps:
      - "core"
      - "log-viewer"

  cpp:
    deps:
      - "utils:clean-outdated-core-checksum-files"
      - "utils:init"
    cmds:
      - "rm -rf '{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}'"
      - "mkdir -p '{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}'"
      - task: "yscope-dev-utils:cmake:install-deps-and-generate-settings"
        vars:
          CMAKE_SETTINGS_DIR: "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}"
          DEP_TASK: "cpp-all-parallel"
      - task: "utils:combine-core-checksum-files"

  log-viewer:
    deps:
      - "utils:init"
    cmds:
      - task: "yscope-dev-utils:remote:download-and-extract-tar"
        vars:
          CHECKSUM_FILE: "{{.G_DEPS_LOG_VIEWER_CHECKSUM_FILE}}"
          FILE_SHA256: "de0600b505545f1bceb7ff5725941035f7c1dc875d08249d9b6d679e3ba77f26"
          OUTPUT_DIR: "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/yscope-log-viewer"
          TAR_FILE: "{{.G_BUILD_DIR}}/yscope-log-viewer.tar.gz"
          URL: "https://github.com/y-scope/yscope-log-viewer/archive/969ff35.tar.gz"

  cpp-all-parallel:
    internal: true
    run: "once"
    deps:
      - task: "absl"
      - task: "antlr"
      - task: "catch2"
      - task: "date"
      - task: "fmt"
      - task: "log-surgeon"
      - task: "mariadb-connector"
      - task: "nlohmann_json"
      - task: "outcome"
      - task: "simdjson"
      - task: "spdlog"
      - task: "sqlite3"
      - task: "utfcpp"
      - task: "yaml-cpp"
      - task: "ystdlib"

  absl:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_CXX_STANDARD=20"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
            - "-DCMAKE_POSITION_INDEPENDENT_CODE=ON"
          LIB_NAME: "absl"
          TARBALL_SHA256: "b396401fd29e2e679cace77867481d388c807671dc2acc602a0259eeb79b7811"
          TARBALL_URL: "https://github.com/abseil/abseil-cpp/archive/refs/tags/20250127.1.tar.gz"

  antlr:
    internal: true
    vars:
      DEP_NAME: "antlr"

      # Paths
      CHECKSUM_FILE: "{{.G_DEPS_CPP_CHECKSUMS_DIR}}/{{.DEP_NAME}}.md5"
      OUTPUT_FILE: "{{.G_DEPS_CPP_DIR}}/antlr-4.13.1-complete.jar"
    run: "once"
    deps:
      - task: "yscope-dev-utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS:
            - "{{.OUTPUT_FILE}}"
      - task: "utils:init"
    cmds:
      - task: "yscope-dev-utils:remote:curl"
        vars:
          FILE_SHA256: "bc13a9c57a8dd7d5196888211e5ede657cb64a3ce968608697e4f668251a8487"
          OUTPUT_FILE: "{{.OUTPUT_FILE}}"
          URL: "https://www.antlr.org/download/antlr-4.13.1-complete.jar"
      - >-
        echo "set(
        ANTLR_EXECUTABLE \"{{.OUTPUT_FILE}}\"
        )" > "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.DEP_NAME}}.cmake"

      # This command must be last
      - task: "yscope-dev-utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS:
            - "{{.OUTPUT_FILE}}"

  catch2:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DBUILD_TESTING=OFF"
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
            - "-DCMAKE_POSITION_INDEPENDENT_CODE=ON"
          LIB_NAME: "Catch2"
          TARBALL_SHA256: "1ab2de20460d4641553addfdfe6acd4109d871d5531f8f519a52ea4926303087"
          TARBALL_URL: "https://github.com/catchorg/Catch2/archive/refs/tags/v3.8.0.tar.gz"

  date:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
          LIB_NAME: "date"
          TARBALL_SHA256: "7a390f200f0ccd207e8cff6757e04817c1a0aec3e327b006b7eb451c57ee3538"
          TARBALL_URL: "https://github.com/HowardHinnant/date/archive/refs/tags/v3.0.1.tar.gz"

  fmt:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
            - "-DFMT_DOC=OFF"
            - "-DFMT_TEST=OFF"
            - "-DCMAKE_POSITION_INDEPENDENT_CODE=ON"
          LIB_NAME: "{{.G_FMT_LIB_NAME}}"
          TARBALL_SHA256: "6cb1e6d37bdcb756dbbe59be438790db409cdb4868c66e888d5df9f13f7c027f"
          TARBALL_URL: "https://github.com/fmtlib/fmt/archive/refs/tags/11.0.2.tar.gz"

  log-surgeon:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
          LIB_NAME: "log_surgeon"
          TARBALL_SHA256: "169b56714b620c3f8f07bf7975aba8573b9bd25e423e5c4f0cc9b52450a2403d"
          TARBALL_URL: "https://github.com/y-scope/log-surgeon/archive/f801a3f.tar.gz"

  mariadb-connector:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
            - "-DCMAKE_POSITION_INDEPENDENT_CODE=ON"
            - "-DUSE_SYSTEM_INSTALLED_LIB=ON"
            - "-DINSTALL_LAYOUT=RPM"
          LIB_NAME: "mariadb-connector-cpp"
          TARBALL_SHA256: "0e3dfe9f2bc3f7bb6f7c159009556290064a7c23402ea08019fa8aebfc3ff2c9"
          TARBALL_URL: "https://github.com/mariadb-corporation/mariadb-connector-cpp/archive/\
            refs/tags/1.1.5.tar.gz"

  nlohmann_json:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
            - "-DJSON_BuildTests=OFF"
          LIB_NAME: "nlohmann_json"
          TARBALL_SHA256: "0d8ef5af7f9794e3263480193c491549b2ba6cc74bb018906202ada498a79406"

          # NOTE: We use the GitHub-generated source tarball for this version rather than the
          # release tarball, since the latter is served from githubusercontent.com which is blocked
          # by some developers' firewalls. The contents of the former are a superset of the latter.
          TARBALL_URL: "https://github.com/nlohmann/json/archive/refs/tags/v3.11.3.tar.gz"

  outcome:
    internal: true
    vars:
      LIB_NAME: "outcome"

      # Paths
      INSTALL_INCLUDE_DIR: "{{.G_DEPS_CPP_DIR}}/{{.LIB_NAME}}-install/include"
      INSTALL_SYMLINK: "{{.INSTALL_INCLUDE_DIR}}/{{.LIB_NAME}}"
      SRC_DIR: "{{.G_DEPS_CPP_DIR}}/{{.LIB_NAME}}-src"
    run: "once"
    deps:
      - task: "utils:init"
    cmds:
      - task: "yscope-dev-utils:remote:download-and-extract-tar"
        vars:
          CHECKSUM_FILE: "{{.G_DEPS_CPP_CHECKSUMS_DIR}}/{{.LIB_NAME}}.md5"
          FILE_SHA256: "14e15bda4e7c26ee42b0329d7ff746235f67bda084305c9d61297e9a521deb18"
          INCLUDE_PATTERNS:
            - "*/single-header"
          OUTPUT_DIR: "{{.SRC_DIR}}"

          # NOTE: We use the GitHub-generated source tarball for this version rather than the
          # release tarball, since the latter is served from githubusercontent.com which is blocked
          # by some developers' firewalls. The source files we use are identical between the two
          # tarballs.
          URL: "https://github.com/ned14/outcome/archive/refs/tags/v2.2.12.tar.gz"
      - "mkdir -p '{{.INSTALL_INCLUDE_DIR}}'"
      - "rm -f '{{.INSTALL_SYMLINK}}'"
      - "ln -s '{{.SRC_DIR}}/single-header' '{{.INSTALL_SYMLINK}}'"
      - >-
        echo "set(
        CLP_OUTCOME_INCLUDE_DIRECTORY \"{{.INSTALL_INCLUDE_DIR}}\"
        )" > "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.LIB_NAME}}.cmake"

  simdjson:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
          LIB_NAME: "simdjson"
          TARBALL_SHA256: "afd8201cfb1abe927737d876441bb1f21730a9ee6078a1b8c6174e6463981fa3"
          TARBALL_URL: "https://github.com/simdjson/simdjson/archive/refs/tags/v3.6.3.tar.gz"

  spdlog:
    internal: true
    run: "once"
    deps:
      - "fmt"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-C {{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.G_FMT_LIB_NAME}}.cmake"
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
            - "-DCMAKE_POSITION_INDEPENDENT_CODE=ON"

            # Set CMP0074 since our minimum required CMake version is less than 3.27, and we
            # depend on fmt's settings file, which uses `fmt_ROOT`.
            - "-DCMAKE_POLICY_DEFAULT_CMP0074=NEW"

            - "-DSPDLOG_BUILD_EXAMPLE=OFF"
            - "-DSPDLOG_BUILD_EXAMPLE_HO=OFF"
            - "-DSPDLOG_FMT_EXTERNAL=ON"
          LIB_NAME: "spdlog"
          TARBALL_SHA256: "9962648c9b4f1a7bbc76fd8d9172555bad1871fdb14ff4f842ef87949682caa"

          # NOTE: Since spdlog depends on fmt, we need to choose a version of spdlog that's
          # compatible with the version of fmt we use.
          TARBALL_URL: "https://github.com/gabime/spdlog/archive/refs/tags/v1.15.0.tar.gz"

  sqlite3:
    internal: true
    vars:
      LIB_NAME: "sqlite3"

      # Paths
      EXTRACTION_DIR: "{{.G_DEPS_CPP_DIR}}/{{.LIB_NAME}}-src"
      INSTALL_INCLUDE_DIR: "{{.G_DEPS_CPP_DIR}}/{{.LIB_NAME}}-install/include"
      INSTALL_SYMLINK: "{{.INSTALL_INCLUDE_DIR}}/{{.LIB_NAME}}"
      ZIP_FILENAME_STEM: "sqlite-amalgamation-3360000"
      SRC_DIR: "{{.EXTRACTION_DIR}}/{{.ZIP_FILENAME_STEM}}"
    run: "once"
    deps:
      - task: "utils:init"
    cmds:
      - task: "yscope-dev-utils:remote:download-and-extract-zip"
        vars:
          CHECKSUM_FILE: "{{.G_DEPS_CPP_CHECKSUMS_DIR}}/{{.LIB_NAME}}.md5"
          FILE_SHA256: "999826fe4c871f18919fdb8ed7ec9dd8217180854dd1fe21eea96aed36186729"
          OUTPUT_DIR: "{{.EXTRACTION_DIR}}"
          URL: "https://www.sqlite.org/2021/{{.ZIP_FILENAME_STEM}}.zip"
      - "mkdir -p '{{.INSTALL_INCLUDE_DIR}}'"
      - "rm -f '{{.INSTALL_SYMLINK}}'"
      - "ln -s '{{.SRC_DIR}}' '{{.INSTALL_SYMLINK}}'"
      - |-
        echo "set(CLP_SQLITE3_SOURCE_DIRECTORY \"{{.SRC_DIR}}\")" \
        > "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.LIB_NAME}}.cmake"
        echo "set(CLP_SQLITE3_INCLUDE_DIRECTORY \"{{.INSTALL_INCLUDE_DIR}}\")" \
        >> "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.LIB_NAME}}.cmake"

  utfcpp:
    internal: true
    vars:
      LIB_NAME: "utfcpp"
      UTFCPP_OUTPUT_DIR: "{{.G_DEPS_CPP_DIR}}/{{.LIB_NAME}}-src"
    run: "once"
    deps:
      - task: "utils:init"
    cmds:
      - task: "yscope-dev-utils:remote:download-and-extract-tar"
        vars:
          CHECKSUM_FILE: "{{.G_DEPS_CPP_CHECKSUMS_DIR}}/{{.LIB_NAME}}.md5"
          FILE_SHA256: "6920a6a5d6a04b9a89b2a89af7132f8acefd46e0c2a7b190350539e9213816c0"
          OUTPUT_DIR: "{{.UTFCPP_OUTPUT_DIR}}"
          URL: "https://github.com/nemtrif/utfcpp/archive/refs/tags/v4.0.6.tar.gz"
      - >-
        echo "set(
        CLP_UTFCPP_INCLUDE_DIRECTORY \"{{.UTFCPP_OUTPUT_DIR}}\"
        )" > "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.LIB_NAME}}.cmake"

  yaml-cpp:
    internal: true
    run: "once"
    cmds:
      - task: "utils:install-remote-cmake-lib"
        vars:
          CMAKE_GEN_ARGS:
            - "-DBUILD_TESTING=OFF"
            - "-DCMAKE_BUILD_TYPE=Release"
            - "-DCMAKE_INSTALL_MESSAGE=LAZY"
          LIB_NAME: "yaml-cpp"
          TARBALL_SHA256: "43e6a9fcb146ad871515f0d0873947e5d497a1c9c60c58cb102a97b47208b7c3"
          TARBALL_URL: "https://github.com/jbeder/yaml-cpp/archive/refs/tags/yaml-cpp-0.7.0.tar.gz"

  ystdlib:
    internal: true
    vars:
      LIB_NAME: "ystdlib"
      YSTDLIB_OUTPUT_DIR: "{{.G_DEPS_CPP_DIR}}/{{.LIB_NAME}}-src"
    run: "once"
    deps:
      - task: "utils:init"
    cmds:
      - task: "yscope-dev-utils:remote:download-and-extract-tar"
        vars:
          CHECKSUM_FILE: "{{.G_DEPS_CPP_CHECKSUMS_DIR}}/{{.LIB_NAME}}.md5"
          FILE_SHA256: "d47c703c0d1c5e755c1bfb984b68c85967683a09dadbe23772d9eb69f822d040"
          OUTPUT_DIR: "{{.YSTDLIB_OUTPUT_DIR}}"
          URL: "https://github.com/y-scope/ystdlib-cpp/archive/2ac1757.tar.gz"
      - >-
        echo "set(
        CLP_YSTDLIB_SOURCE_DIRECTORY \"{{.YSTDLIB_OUTPUT_DIR}}\"
        )" > "{{.G_DEPS_CPP_CMAKE_SETTINGS_DIR}}/{{.LIB_NAME}}.cmake"
